version: '3.9'

services:
  local-challenger:
    image: micro-challenger:latest  # Use the image loaded from the .tar file
    container_name: local-challenger
    hostname: local-challenger
    user: root
    ports:
      - "8866:8866"
    volumes:
      - ./local-challenger/data:/data
    command: ["0.0.0.0:8866", "/data"]
    networks:
      - flinknet

  kafka1:
    image: apache/kafka:latest
    container_name: kafka1
    hostname: kafka1
    user: root
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - flinknet
      
  kafka2:
    image: apache/kafka:latest
    container_name: kafka2
    hostname: kafka2
    user: root
    ports:
      - "9094:9092"
    environment:
      - KAFKA_NODE_ID=2
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - flinknet

  jobmanager:
    build:
      context: .
      dockerfile: ./flink/cluster/jobmanager/Dockerfile
    container_name: jobmanager
    hostname: jobmanager
    user: root
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
    volumes:
      - ./output:/data/output
    networks:
      - flinknet

  taskmanager1:
    build:
      context: .
      dockerfile: ./flink/cluster/taskmanager/Dockerfile
    container_name: taskmanager1
    hostname: taskmanager1
    user: root
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
    volumes:
      - ./output:/data/output
    networks:
      - flinknet
      
  taskmanager2:
    build:
      context: .
      dockerfile: ./flink/cluster/taskmanager/Dockerfile
    container_name: taskmanager2
    hostname: taskmanager2
    user: root
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
    volumes:
      - ./output:/data/output
    networks:
      - flinknet

  batch-producer:
    build:
      context: .
      dockerfile: ./batch-producer/Dockerfile
    container_name: batch-producer
    hostname: batch-producer
    user: root
    depends_on:
      - kafka1
      - kafka2
      - local-challenger
    environment:
      - LOCAL_CHALLENGER_URL=http://local-challenger:8866
    command: ["tail", "-f", "/dev/null"]
    networks:
      - flinknet


networks:
  flinknet:
    driver: bridge

