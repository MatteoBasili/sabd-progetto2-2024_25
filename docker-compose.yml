services:
  local-challenger:
    image: micro-challenger:latest  # Use the image loaded from the .tar file
    container_name: local-challenger
    hostname: local-challenger
    user: root
    ports:
      - "8866:8866"
    volumes:
      - ./local-challenger/data:/data
    command: ["0.0.0.0:8866", "/data"]
    networks:
      - flinknet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    hostname: zookeeper
    user: root
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - flinknet

  kafka1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka1
    hostname: kafka1
    user: root
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,INTERNAL://kafka1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    networks:
      - flinknet

  kafka2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka2
    hostname: kafka2
    user: root
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,INTERNAL://kafka2:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,INTERNAL://0.0.0.0:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    networks:
      - flinknet

  topic-init:
    build:
      context: .
      dockerfile: ./kafka/init/Dockerfile
    container_name: topic-init
    hostname: topic-init
    user: root
    depends_on:
      - kafka1
      - kafka2
    command: ["tail", "-f", "/dev/null"]
    networks:
      - flinknet

  jobmanager:
    build:
      context: .
      dockerfile: ./flink/cluster/jobmanager/Dockerfile
    container_name: jobmanager
    hostname: jobmanager
    user: root
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
    volumes:
      - ./flink/checkpoints:/tmp/flink-checkpoints
    networks:
      - flinknet

  taskmanager1:
    build:
      context: .
      dockerfile: ./flink/cluster/taskmanager/Dockerfile
    container_name: taskmanager1
    hostname: taskmanager1
    user: root
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
    volumes:
      - ./flink/checkpoints:/tmp/flink-checkpoints
    networks:
      - flinknet
      
  taskmanager2:
    build:
      context: .
      dockerfile: ./flink/cluster/taskmanager/Dockerfile
    container_name: taskmanager2
    hostname: taskmanager2
    user: root
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PLUGINS_DIR=/opt/flink/plugins
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
    volumes:
      - ./flink/checkpoints:/tmp/flink-checkpoints
    networks:
      - flinknet

  batch-producer:
    build:
      context: .
      dockerfile: ./batch-producer/Dockerfile
    container_name: batch-producer
    hostname: batch-producer
    user: root
    depends_on:
      - kafka1
      - kafka2
      - local-challenger
    environment:
      - LOCAL_CHALLENGER_URL=http://local-challenger:8866
    command: ["tail", "-f", "/dev/null"]
    networks:
      - flinknet
      
  csv-writer:
    build:
      context: .
      dockerfile: ./csv-writer/Dockerfile
    container_name: csv-writer
    hostname: csv-writer
    user: root
    depends_on:
      - kafka1
      - kafka2
    volumes:
      - ./output:/data/output
    command: ["tail", "-f", "/dev/null"]
    networks:
      - flinknet


networks:
  flinknet:
    driver: bridge

