version: '3.9'

services:
  local-challenger:
    image: micro-challenger:latest  # Use the image loaded from the .tar file
    ports:
      - "8866:8866"
    volumes:
      - ./local-challenger/data:/data
    command: ["0.0.0.0:8866", "/data"]
    networks:
      - flinknet

  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CLUSTER_ID=abcdefghijklmnopqrstuv  # UUID, can be generated
    networks:
      - flinknet

  jobmanager:
    image: flink:2.0.0-scala_2.12
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./output:/data/output
      - ./flink/plugins/kafka:/opt/flink/plugins/kafka
    networks:
      - flinknet

  taskmanager:
    image: flink:2.0.0-scala_2.12
    command: taskmanager
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./output:/data/output
      - ./flink/plugins/kafka:/opt/flink/plugins/kafka
    networks:
      - flinknet

  q1-runner:
    build:
      context: .
      dockerfile: ./flink/q1-job/Dockerfile
    depends_on:
      - local-challenger
      - kafka
      - jobmanager
    volumes:
      - ./output:/data/output
    networks:
      - flinknet
    environment:
      - FLINK_MASTER_HOST=jobmanager
      - LOCAL_CHALLENGER_URL=http://local-challenger:8866

networks:
  flinknet:
    driver: bridge

